// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="heap_sort,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.479000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=609,HLS_SYN_LUT=938}" *)

module heap_sort (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 58'b1;
parameter    ap_ST_st2_fsm_1 = 58'b10;
parameter    ap_ST_st3_fsm_2 = 58'b100;
parameter    ap_ST_st4_fsm_3 = 58'b1000;
parameter    ap_ST_st5_fsm_4 = 58'b10000;
parameter    ap_ST_st6_fsm_5 = 58'b100000;
parameter    ap_ST_st7_fsm_6 = 58'b1000000;
parameter    ap_ST_st8_fsm_7 = 58'b10000000;
parameter    ap_ST_st9_fsm_8 = 58'b100000000;
parameter    ap_ST_st10_fsm_9 = 58'b1000000000;
parameter    ap_ST_st11_fsm_10 = 58'b10000000000;
parameter    ap_ST_st12_fsm_11 = 58'b100000000000;
parameter    ap_ST_st13_fsm_12 = 58'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 58'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 58'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 58'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 58'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 58'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 58'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 58'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 58'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 58'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 58'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 58'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 58'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 58'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 58'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 58'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 58'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 58'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 58'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 58'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 58'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 58'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 58'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 58'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 58'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 58'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 58'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 58'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 58'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 58'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 58'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 58'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 58'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 58'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 58'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 58'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 58'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 58'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 58'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 58'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 58'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 58'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 58'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 58'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 58'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 58'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv6_27 = 6'b100111;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv64_10 = 64'b10000;
parameter    ap_const_lv64_11 = 64'b10001;
parameter    ap_const_lv64_12 = 64'b10010;
parameter    ap_const_lv64_13 = 64'b10011;
parameter    ap_const_lv64_14 = 64'b10100;
parameter    ap_const_lv64_15 = 64'b10101;
parameter    ap_const_lv64_16 = 64'b10110;
parameter    ap_const_lv64_17 = 64'b10111;
parameter    ap_const_lv64_18 = 64'b11000;
parameter    ap_const_lv64_19 = 64'b11001;
parameter    ap_const_lv64_1A = 64'b11010;
parameter    ap_const_lv64_1B = 64'b11011;
parameter    ap_const_lv64_1C = 64'b11100;
parameter    ap_const_lv64_1D = 64'b11101;
parameter    ap_const_lv64_1E = 64'b11110;
parameter    ap_const_lv64_1F = 64'b11111;
parameter    ap_const_lv64_20 = 64'b100000;
parameter    ap_const_lv64_21 = 64'b100001;
parameter    ap_const_lv64_22 = 64'b100010;
parameter    ap_const_lv64_23 = 64'b100011;
parameter    ap_const_lv64_24 = 64'b100100;
parameter    ap_const_lv64_25 = 64'b100101;
parameter    ap_const_lv64_26 = 64'b100110;
parameter    ap_const_lv64_27 = 64'b100111;
parameter    ap_const_lv6_28 = 6'b101000;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv6_0 = 6'b000000;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_75;
reg    ap_ready;
reg   [5:0] array_r_address0;
reg    array_r_ce0;
wire   [31:0] array_r_q0;
reg   [5:0] array_out_address0;
reg    array_out_ce0;
reg    array_out_we0;
reg   [31:0] array_out_d0;
wire   [31:0] array_out_q0;
reg   [31:0] reg_1006;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_136;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_143;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_151;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_159;
reg   [31:0] reg_1011;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_169;
reg   [0:0] tmp_11_i_reg_1452;
wire   [0:0] tmp_15_i_fu_1136_p2;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_185;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_193;
wire   [0:0] or_cond_fu_1224_p2;
wire   [5:0] array_out_addr_reg_1234;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_212;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_223;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_232;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_241;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_250;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_259;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_268;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_277;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_286;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_295;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_304;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_313;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_322;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_331;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_340;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_349;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_358;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_367;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_376;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_385;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_394;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_403;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_412;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_421;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_430;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_439;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_448;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_457;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_466;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_475;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_484;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_493;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_502;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_511;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_520;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_529;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_538;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_547;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_556;
wire   [31:0] j_i_cast1_fu_1022_p1;
reg   [31:0] j_i_cast1_reg_1434;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_565;
wire   [0:0] exitcond_i_fu_1026_p2;
wire   [0:0] tmp_11_i_fu_1058_p2;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_580;
reg   [5:0] array_out_addr_47_reg_1456;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_589;
wire   [31:0] j_3_fu_1123_p3;
reg   [31:0] j_3_reg_1461;
reg   [5:0] array_out_addr_48_reg_1466;
reg   [31:0] array_out_load_8_reg_1471;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_601;
wire   [5:0] i_2_fu_1141_p2;
wire   [31:0] i_cast_fu_1147_p1;
reg   [31:0] i_cast_reg_1485;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_614;
reg   [5:0] array_out_addr_16_reg_1493;
wire   [5:0] i_1_fu_1162_p2;
reg   [5:0] i_1_reg_1498;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_625;
wire   [31:0] i_1_cast_fu_1168_p1;
reg   [31:0] i_1_cast_reg_1503;
wire   [31:0] index_fu_1178_p2;
reg   [31:0] index_reg_1508;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_636;
wire   [31:0] index_1_fu_1189_p2;
reg   [31:0] index_1_reg_1521;
wire   [31:0] p_s_fu_1203_p3;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_651;
wire   [0:0] grp_fu_1016_p2;
reg   [5:0] array_out_addr_43_reg_1539;
reg   [5:0] array_out_addr_44_reg_1544;
wire   [0:0] tmp_10_fu_1219_p2;
reg   [0:0] tmp_10_reg_1549;
reg   [0:0] or_cond_reg_1554;
reg   [31:0] grp_heap_sort_swap_hw_fu_990_x_read;
wire   [31:0] grp_heap_sort_swap_hw_fu_990_ap_return_0;
wire   [31:0] grp_heap_sort_swap_hw_fu_990_ap_return_1;
reg   [5:0] j_2_reg_934;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_678;
reg   [31:0] j2_i_reg_946;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_687;
reg   [5:0] i_reg_955;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_702;
reg   [31:0] j_reg_967;
reg   [31:0] j_1_reg_979;
wire   [63:0] tmp_i_fu_1032_p1;
wire   [63:0] tmp_i_8_fu_1053_p1;
wire  signed [63:0] tmp_12_i_fu_1064_p1;
wire  signed [63:0] tmp_14_i_fu_1131_p1;
wire   [63:0] tmp_3_fu_1157_p1;
wire  signed [63:0] tmp_7_fu_1184_p1;
wire  signed [63:0] tmp_9_fu_1194_p1;
wire  signed [63:0] tmp_4_fu_1209_p1;
wire  signed [63:0] tmp_6_fu_1214_p1;
wire   [5:0] tmp_tr_i_fu_1037_p2;
wire   [4:0] p_lshr_f_i_cast_fu_1043_p4;
wire   [31:0] tmp_13_i_fu_1069_p2;
wire   [31:0] p_neg1_i_fu_1083_p2;
wire   [30:0] p_lshr1_i_fu_1089_p4;
wire   [31:0] tmp_fu_1099_p1;
wire   [30:0] p_lshr_f1_i_fu_1109_p4;
wire   [0:0] tmp_5_fu_1075_p3;
wire   [31:0] p_neg_t1_i_fu_1103_p2;
wire   [31:0] tmp_11_fu_1119_p1;
wire   [31:0] tmp_12_fu_1172_p2;
wire   [0:0] tmp_1_fu_1199_p2;
wire   [0:0] tmp_2_fu_1151_p2;
reg   [57:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 58'b1;
end

heap_sort_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
heap_sort_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .array_r_address0(array_r_address0),
    .array_r_ce0(array_r_ce0),
    .array_r_q0(array_r_q0),
    .array_out_address0(array_out_address0),
    .array_out_ce0(array_out_ce0),
    .array_out_we0(array_out_we0),
    .array_out_d0(array_out_d0),
    .array_out_q0(array_out_q0)
);

heap_sort_swap_hw grp_heap_sort_swap_hw_fu_990(
    .x_read(grp_heap_sort_swap_hw_fu_990_x_read),
    .y_read(array_out_q0),
    .ap_return_0(grp_heap_sort_swap_hw_fu_990_ap_return_0),
    .ap_return_1(grp_heap_sort_swap_hw_fu_990_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st58_fsm_57) & (1'b0 == tmp_10_reg_1549))) begin
        i_reg_955 <= i_1_reg_1498;
    end else if (((1'b1 == ap_sig_cseq_ST_st42_fsm_41) & ~(1'b0 == exitcond_i_fu_1026_p2))) begin
        i_reg_955 <= ap_const_lv6_27;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_11_i_fu_1058_p2))) begin
        j2_i_reg_946 <= j_i_cast1_reg_1434;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        j2_i_reg_946 <= j_3_reg_1461;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        if ((1'b0 == grp_fu_1016_p2)) begin
            j_1_reg_979 <= index_reg_1508;
        end else if (~(1'b0 == grp_fu_1016_p2)) begin
            j_1_reg_979 <= p_s_fu_1203_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ((tmp_11_i_reg_1452 == 1'b0) | (1'b0 == tmp_15_i_fu_1136_p2)))) begin
        j_2_reg_934 <= i_2_fu_1141_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        j_2_reg_934 <= ap_const_lv6_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st58_fsm_57) & ~(1'b0 == tmp_10_reg_1549))) begin
        j_reg_967 <= j_1_reg_979;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        j_reg_967 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        array_out_addr_16_reg_1493 <= tmp_3_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        array_out_addr_43_reg_1539 <= tmp_4_fu_1209_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        array_out_addr_44_reg_1544 <= tmp_6_fu_1214_p1;
        tmp_10_reg_1549 <= tmp_10_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        array_out_addr_47_reg_1456 <= tmp_12_i_fu_1064_p1;
        array_out_addr_48_reg_1466 <= tmp_14_i_fu_1131_p1;
        j_3_reg_1461 <= j_3_fu_1123_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        array_out_load_8_reg_1471 <= array_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        i_1_cast_reg_1503[5 : 0] <= i_1_cast_fu_1168_p1[5 : 0];
        i_1_reg_1498 <= i_1_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        i_cast_reg_1485[5 : 0] <= i_cast_fu_1147_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        index_1_reg_1521[31 : 1] <= index_1_fu_1189_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        index_reg_1508[31 : 1] <= index_fu_1178_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        j_i_cast1_reg_1434[5 : 0] <= j_i_cast1_fu_1022_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        or_cond_reg_1554 <= or_cond_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | (1'b1 == ap_sig_cseq_ST_st54_fsm_53) | (1'b1 == ap_sig_cseq_ST_st56_fsm_55))) begin
        reg_1006 <= array_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(tmp_11_i_reg_1452 == 1'b0) & ~(1'b0 == tmp_15_i_fu_1136_p2)) | (1'b1 == ap_sig_cseq_ST_st51_fsm_50) | ((1'b1 == ap_sig_cseq_ST_st57_fsm_56) & ~(1'b0 == or_cond_fu_1224_p2)))) begin
        reg_1011 <= grp_heap_sort_swap_hw_fu_990_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        tmp_11_i_reg_1452 <= tmp_11_i_fu_1058_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == tmp_2_fu_1151_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == tmp_2_fu_1151_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_286) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_295) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_304) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_313) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_322) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_331) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_340) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_349) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_358) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_367) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_75) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_376) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_385) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_394) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_403) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_412) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_421) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_430) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_439) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_448) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_457) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_212) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_466) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_475) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_484) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_493) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_502) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_511) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_520) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_529) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_538) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_547) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_223) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_556) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_678) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_565) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_136) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_580) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_589) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_601) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_169) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_687) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_614) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_232) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_143) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_185) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_625) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_636) begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_151) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_651) begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_702) begin
        ap_sig_cseq_ST_st58_fsm_57 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_241) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_250) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_259) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_268) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_277) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        array_out_address0 = array_out_addr_44_reg_1544;
    end else if ((1'b1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        array_out_address0 = array_out_addr_43_reg_1539;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        array_out_address0 = array_out_addr_16_reg_1493;
    end else if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        array_out_address0 = array_out_addr_47_reg_1456;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        array_out_address0 = ap_const_lv64_27;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        array_out_address0 = ap_const_lv64_26;
    end else if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        array_out_address0 = ap_const_lv64_25;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        array_out_address0 = ap_const_lv64_24;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        array_out_address0 = ap_const_lv64_23;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        array_out_address0 = ap_const_lv64_22;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        array_out_address0 = ap_const_lv64_21;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        array_out_address0 = ap_const_lv64_20;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        array_out_address0 = ap_const_lv64_1F;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        array_out_address0 = ap_const_lv64_1E;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        array_out_address0 = ap_const_lv64_1D;
    end else if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        array_out_address0 = ap_const_lv64_1C;
    end else if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        array_out_address0 = ap_const_lv64_1B;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        array_out_address0 = ap_const_lv64_1A;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        array_out_address0 = ap_const_lv64_19;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        array_out_address0 = ap_const_lv64_18;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        array_out_address0 = ap_const_lv64_17;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        array_out_address0 = ap_const_lv64_16;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        array_out_address0 = ap_const_lv64_15;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        array_out_address0 = ap_const_lv64_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        array_out_address0 = ap_const_lv64_13;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        array_out_address0 = ap_const_lv64_12;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        array_out_address0 = ap_const_lv64_11;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        array_out_address0 = ap_const_lv64_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        array_out_address0 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        array_out_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        array_out_address0 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        array_out_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        array_out_address0 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        array_out_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        array_out_address0 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        array_out_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        array_out_address0 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        array_out_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        array_out_address0 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        array_out_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        array_out_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        array_out_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        array_out_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        array_out_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        array_out_address0 = tmp_6_fu_1214_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        array_out_address0 = tmp_4_fu_1209_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        array_out_address0 = tmp_9_fu_1194_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        array_out_address0 = tmp_7_fu_1184_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        array_out_address0 = tmp_3_fu_1157_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st51_fsm_50) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        array_out_address0 = array_out_addr_reg_1234;
    end else if (((1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        array_out_address0 = array_out_addr_48_reg_1466;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        array_out_address0 = tmp_12_i_fu_1064_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        array_out_address0 = tmp_i_8_fu_1053_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        array_out_address0 = tmp_i_fu_1032_p1;
    end else begin
        array_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | (1'b1 == ap_sig_cseq_ST_st54_fsm_53) | (1'b1 == ap_sig_cseq_ST_st56_fsm_55) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st51_fsm_50) | (1'b1 == ap_sig_cseq_ST_st57_fsm_56) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st52_fsm_51) | (1'b1 == ap_sig_cseq_ST_st53_fsm_52) | (1'b1 == ap_sig_cseq_ST_st55_fsm_54) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        array_out_ce0 = 1'b1;
    end else begin
        array_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st52_fsm_51) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st58_fsm_57))) begin
        array_out_d0 = reg_1011;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st51_fsm_50) | (1'b1 == ap_sig_cseq_ST_st57_fsm_56))) begin
        array_out_d0 = grp_heap_sort_swap_hw_fu_990_ap_return_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        array_out_d0 = array_r_q0;
    end else begin
        array_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(tmp_11_i_reg_1452 == 1'b0) & ~(1'b0 == tmp_15_i_fu_1136_p2)) | (1'b1 == ap_sig_cseq_ST_st51_fsm_50) | ((1'b1 == ap_sig_cseq_ST_st57_fsm_56) & ~(1'b0 == or_cond_fu_1224_p2)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st52_fsm_51) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | ((1'b1 == ap_sig_cseq_ST_st58_fsm_57) & ~(1'b0 == or_cond_reg_1554)))) begin
        array_out_we0 = 1'b1;
    end else begin
        array_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        array_r_address0 = ap_const_lv64_27;
    end else if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        array_r_address0 = ap_const_lv64_26;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        array_r_address0 = ap_const_lv64_25;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        array_r_address0 = ap_const_lv64_24;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        array_r_address0 = ap_const_lv64_23;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        array_r_address0 = ap_const_lv64_22;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        array_r_address0 = ap_const_lv64_21;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        array_r_address0 = ap_const_lv64_20;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        array_r_address0 = ap_const_lv64_1F;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        array_r_address0 = ap_const_lv64_1E;
    end else if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        array_r_address0 = ap_const_lv64_1D;
    end else if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        array_r_address0 = ap_const_lv64_1C;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        array_r_address0 = ap_const_lv64_1B;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        array_r_address0 = ap_const_lv64_1A;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        array_r_address0 = ap_const_lv64_19;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        array_r_address0 = ap_const_lv64_18;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        array_r_address0 = ap_const_lv64_17;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        array_r_address0 = ap_const_lv64_16;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        array_r_address0 = ap_const_lv64_15;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        array_r_address0 = ap_const_lv64_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        array_r_address0 = ap_const_lv64_13;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        array_r_address0 = ap_const_lv64_12;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        array_r_address0 = ap_const_lv64_11;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        array_r_address0 = ap_const_lv64_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        array_r_address0 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        array_r_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        array_r_address0 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        array_r_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        array_r_address0 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        array_r_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        array_r_address0 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        array_r_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        array_r_address0 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        array_r_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        array_r_address0 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        array_r_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        array_r_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        array_r_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        array_r_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        array_r_address0 = ap_const_lv64_0;
    end else begin
        array_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        array_r_ce0 = 1'b1;
    end else begin
        array_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st51_fsm_50) | ((1'b1 == ap_sig_cseq_ST_st57_fsm_56) & ~(1'b0 == or_cond_fu_1224_p2)))) begin
        grp_heap_sort_swap_hw_fu_990_x_read = reg_1006;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(tmp_11_i_reg_1452 == 1'b0) & ~(1'b0 == tmp_15_i_fu_1136_p2))) begin
        grp_heap_sort_swap_hw_fu_990_x_read = array_out_load_8_reg_1471;
    end else begin
        grp_heap_sort_swap_hw_fu_990_x_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            if (~(1'b0 == exitcond_i_fu_1026_p2)) begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            if ((1'b0 == tmp_11_i_fu_1058_p2)) begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            if (((tmp_11_i_reg_1452 == 1'b0) | (1'b0 == tmp_15_i_fu_1136_p2))) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st49_fsm_48 : begin
            if (~(1'b0 == tmp_2_fu_1151_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            if (~(1'b0 == tmp_10_reg_1549)) begin
                ap_NS_fsm = ap_ST_st53_fsm_52;
            end else begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_136 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_143 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_151 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_169 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_185 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_38]);
end

always @ (*) begin
    ap_sig_212 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_223 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_232 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_241 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_250 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_259 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_268 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_277 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_286 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_295 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_304 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_313 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_322 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_331 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_340 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_349 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_358 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_367 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_376 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_385 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_394 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_403 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_412 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_421 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_430 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_439 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_448 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_457 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_466 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_475 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_484 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_493 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_502 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_511 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_520 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_529 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_538 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_547 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_556 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_565 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_580 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_589 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_601 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_614 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_625 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_636 = (1'b1 == ap_CS_fsm[ap_const_lv32_34]);
end

always @ (*) begin
    ap_sig_651 = (1'b1 == ap_CS_fsm[ap_const_lv32_36]);
end

always @ (*) begin
    ap_sig_678 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_687 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_702 = (1'b1 == ap_CS_fsm[ap_const_lv32_39]);
end

always @ (*) begin
    ap_sig_75 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign array_out_addr_reg_1234 = ap_const_lv64_0;

assign exitcond_i_fu_1026_p2 = ((j_2_reg_934 == ap_const_lv6_28) ? 1'b1 : 1'b0);

assign grp_fu_1016_p2 = (($signed(reg_1006) < $signed(array_out_q0)) ? 1'b1 : 1'b0);

assign i_1_cast_fu_1168_p1 = i_1_fu_1162_p2;

assign i_1_fu_1162_p2 = ($signed(i_reg_955) + $signed(ap_const_lv6_3F));

assign i_2_fu_1141_p2 = (j_2_reg_934 + ap_const_lv6_1);

assign i_cast_fu_1147_p1 = i_reg_955;

assign index_1_fu_1189_p2 = (ap_const_lv32_1 + index_reg_1508);

assign index_fu_1178_p2 = (tmp_12_fu_1172_p2 | ap_const_lv32_1);

assign j_3_fu_1123_p3 = ((tmp_5_fu_1075_p3[0:0] === 1'b1) ? p_neg_t1_i_fu_1103_p2 : tmp_11_fu_1119_p1);

assign j_i_cast1_fu_1022_p1 = j_2_reg_934;

assign or_cond_fu_1224_p2 = (grp_fu_1016_p2 & tmp_10_reg_1549);

assign p_lshr1_i_fu_1089_p4 = {{p_neg1_i_fu_1083_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_f1_i_fu_1109_p4 = {{tmp_13_i_fu_1069_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_f_i_cast_fu_1043_p4 = {{tmp_tr_i_fu_1037_p2[ap_const_lv32_5 : ap_const_lv32_1]}};

assign p_neg1_i_fu_1083_p2 = (ap_const_lv32_1 - j2_i_reg_946);

assign p_neg_t1_i_fu_1103_p2 = (ap_const_lv32_0 - tmp_fu_1099_p1);

assign p_s_fu_1203_p3 = ((tmp_1_fu_1199_p2[0:0] === 1'b1) ? index_1_reg_1521 : index_reg_1508);

assign tmp_10_fu_1219_p2 = (($signed(j_1_reg_979) < $signed(i_cast_reg_1485)) ? 1'b1 : 1'b0);

assign tmp_11_fu_1119_p1 = p_lshr_f1_i_fu_1109_p4;

assign tmp_11_i_fu_1058_p2 = (($signed(reg_1006) > $signed(array_out_q0)) ? 1'b1 : 1'b0);

assign tmp_12_fu_1172_p2 = j_reg_967 << ap_const_lv32_1;

assign tmp_12_i_fu_1064_p1 = $signed(j2_i_reg_946);

assign tmp_13_i_fu_1069_p2 = ($signed(j2_i_reg_946) + $signed(ap_const_lv32_FFFFFFFF));

assign tmp_14_i_fu_1131_p1 = $signed(j_3_fu_1123_p3);

assign tmp_15_i_fu_1136_p2 = (($signed(array_out_load_8_reg_1471) > $signed(array_out_q0)) ? 1'b1 : 1'b0);

assign tmp_1_fu_1199_p2 = (($signed(index_reg_1508) < $signed(i_1_cast_reg_1503)) ? 1'b1 : 1'b0);

assign tmp_2_fu_1151_p2 = ((i_reg_955 == ap_const_lv6_0) ? 1'b1 : 1'b0);

assign tmp_3_fu_1157_p1 = i_reg_955;

assign tmp_4_fu_1209_p1 = $signed(j_reg_967);

assign tmp_5_fu_1075_p3 = tmp_13_i_fu_1069_p2[ap_const_lv32_1F];

assign tmp_6_fu_1214_p1 = $signed(j_1_reg_979);

assign tmp_7_fu_1184_p1 = $signed(index_fu_1178_p2);

assign tmp_9_fu_1194_p1 = $signed(index_1_fu_1189_p2);

assign tmp_fu_1099_p1 = p_lshr1_i_fu_1089_p4;

assign tmp_i_8_fu_1053_p1 = p_lshr_f_i_cast_fu_1043_p4;

assign tmp_i_fu_1032_p1 = j_2_reg_934;

assign tmp_tr_i_fu_1037_p2 = ($signed(j_2_reg_934) + $signed(ap_const_lv6_3F));

always @ (posedge ap_clk) begin
    j_i_cast1_reg_1434[31:6] <= 26'b00000000000000000000000000;
    i_cast_reg_1485[31:6] <= 26'b00000000000000000000000000;
    i_1_cast_reg_1503[31:6] <= 26'b00000000000000000000000000;
    index_reg_1508[0] <= 1'b1;
    index_1_reg_1521[0] <= 1'b0;
end

endmodule //heap_sort
